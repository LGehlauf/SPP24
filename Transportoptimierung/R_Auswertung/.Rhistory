install.packages("readxl")
read_excel("tasks_metrics.xlsx")
library(readxl)
read_excel("tasks_metrics.xlsx")
read_excel("\tasks_metrics.xlsx")
read_excel("/tasks_metrics.xlsx")
read_excel("C:/Users/lgehl/Documents/GitHub/SPP24/Transportoptimierung/tasks_metrics.xlsx")
raw <- read_excel("C:/Users/lgehl/Documents/GitHub/SPP24/Transportoptimierung/tasks_metrics.xlsx")
View(raw)
library(ggplot2)
library(dplyr)
data <- raw %>% mutate(rel_global_empty_distance = global_empty_distance/global_total_distance)
ggplot(data, aes(task_id, rel_global_empty_distance)) +
geom_col()
data <- raw %>% mutate(rel_global_empty_distance = global_empty_distance/global_total_distance) %>%
arrange(rel_global_empty_distance)
ggplot(data, aes(task_id, rel_global_empty_distance)) +
geom_col()
View(data)
data <- raw %>% mutate(rel_global_empty_distance = global_empty_distance/global_total_distance) %>%
arrange(rel_global_empty_distance)
ggplot(data, aes(task_id, rel_global_empty_distance)) +
geom_col()
data <- raw %>% mutate(rel = global_empty_distance/global_total_distance) %>%
arrange(rel)
data$task_id <- factor(data$task_id) %>%
fct_reorder(data$rel)
library(tidyverse)
test$POPULATION <- factor(test$POPULATION) %>%
fct_reorder(test$EXCESS_ALLELE_MATCHES_WITH_MBUTI)
data$task_id <- factor(data$task_id) %>%
fct_reorder(data$rel)
ggplot(data, aes(task_id, rel)) +
geom_col()
ggplot(data, aes(task_id, rel)) +
geom_col() +
ylim(0.4, 0.6)
ggplot(data, aes(task_id, rel)) +
geom_col()
ggplot(data, aes(task_id, rel)) +
geom_col() +
ylim(0.4, 0.6)
ggplot(data, aes(task_id, rel)) +
geom_col() +
ylim(0.3, 0.6)
ggplot(data, aes(task_id, rel)) +
geom_col() +
ylim(0.0, 0.6)
ggplot(data, aes(task_id, rel)) +
geom_col() +
ylim(0.1, 0.6)
ggplot(data, aes(task_id, rel)) +
geom_col() +
ylim(0.2, 0.6)
ggplot(data, aes(task_id, rel)) +
geom_col()
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col()
dataA <- raw %>% mutate(rel = global_empty_distance/global_total_distance) %>%
arrange(rel)
dataB <- dataA
dataC <- dataA
dataA <- raw %>% mutate(rel = global_empty_distance/global_total_distance) %>%
arrange(rel) %>% mutate(grouup = "A")
dataB <- dataA %>% mutate(grouup = "B")
dataC <- dataA %>% mutate(grouup = "C")
data <- dataA %>% rbind(dataB) %>% rbind(dataC)
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
ggplot(data, aes(task_id, rel, fill=b)) +
geom_col() +
ggplot(data, aes(task_id, rel, fill=b)) +
geom_col() +
ggplot(data, aes(task_id, rel, fill=b)) +
geom_col()
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col()
ggplot(data, aes(task_id, rel, fill=b)) +
geom_col()
ggplot(dataA, aes(task_id, rel, fill=a)) +
geom_col()
data <- raw %>% mutate(rel = global_empty_distance/global_total_distance) %>%
arrange(rel) %>% mutate(grouup = "A")
data$task_id <- factor(data$task_id) %>%
fct_reorder(data$rel)
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col()
ggplot(dataA, aes(task_id, rel, fill=b)) +
geom_col()
ggplot(data, aes(task_id, rel, fill=b)) +
geom_col()
ggplot(data, aes(task_id, rel, fill=c)) +
geom_col()
ggplot(data, aes(task_id, rel, fill=c)) +
geom_col()
ggplot(data, aes(task_id, rel, fill=c)) +
geom_col()
ggplot(data, aes(task_id, rel, fill=d)) +
geom_col()
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col()
ggplot(data, aes(task_id, rel, fill=b)) +
geom_col()
ggplot(data, aes(task_id, rel, fill=d)) +
geom_col()
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
guides(fill = "none")
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
guides(fill = "yes")
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
guides(fill = yes)
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
guides(fill = "colorbar")
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
guides(fill = "legend")
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
guides(fill = "legend", name = "asdf")
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "sdaölf")
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "sdaölf", fill = "colorbar")
ggplot(data, aes(task_id, rel, fill=b)) +
geom_col() +
scale_fill_continuous(name = "Anzahl Aufträge in FFZ Queue")
ggplot(data, aes(task_id, rel, fill=b)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das FFZ mit den wenigsten Aufträgen")
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das nahste FFZ")
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das nächste FFZ")
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das nächste FFZ")
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das nächste FFZ")
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das nächste FFZ") +
theme_minimal()
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das nächste FFZ") +
theme_void()
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das nächste FFZ") +
theme_dark()
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das nächste FFZ") +
theme_minimal()
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das nächste FFZ") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
plot <- ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das nächste FFZ") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
ggplot(data, aes(task_id, rel, fill=b)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das FFZ mit den wenigsten Aufträgen")
ggplot(data, aes(task_id, rel, fill=b)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das FFZ mit den wenigsten Aufträgen") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
ggplot(data, aes(task_id, rel, fill=d)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das schnellste FFZ") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
ggplot(data, aes(task_id, rel, fill=d)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das \nschnellste FFZ") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
ggplot(data, aes(task_id, rel, fill=b)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das FFZ mit\nden wenigsten Aufträgen") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
plot <- ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das\nnächste FFZ") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
plot <- ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das\nnächste FFZ") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
plot <- ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das\nnächste FFZ") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das\nnächste FFZ") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
ggplot(data, aes(task_id, rel, fill=b)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das FFZ mit\nden wenigsten Aufträgen") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
ggplot(data, aes(task_id, rel, fill=d)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das\nschnellste FFZ") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das\nnächste FFZ") +
theme_minimal() +
guides(fill = "colorbar")
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das\nnächste FFZ") +
theme_minimal() +
guides(fill = "colorbar") +
ylab("gefahrene relative Leerdistanz")
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das\nnächste FFZ") +
theme_minimal() +
guides(fill = "colorbar") +
ylab("gefahrene relative Leerdistanz")
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das\nnächste FFZ") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
ggplot(data, aes(task_id, rel, fill=b)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das FFZ mit\nden wenigsten Aufträgen") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
ggplot(data, aes(task_id, rel, fill=d)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das\nschnellste FFZ") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das\nnächste FFZ") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
ggplot(data, aes(task_id, rel, fill=b)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das FFZ mit\nden wenigsten Aufträgen") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
ggplot(data, aes(task_id, rel, fill=d)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das\nschnellste FFZ") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
ggplot(data, aes(task_id, rel, fill=d)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das\nschnellste FFZ") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
ggplot(data, aes(task_id, rel, fill=b)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das FFZ mit\nden wenigsten Aufträgen") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
ggplot(data, aes(task_id, rel, fill=b)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das FFZ mit\nden wenigsten Aufträgen") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
ggplot(data, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das\nnächste FFZ") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
Leerdistanz <- raw %>% mutate(rel = global_empty_distance/global_total_distance)
Leerdistanz$task_id <- factor(Leerdistanz$task_id) %>%
fct_reorder(Leerdistanz$rel)
ggplot(Leerdistanz, aes(task_id, rel, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das\nnächste FFZ") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
Wartezeit <- raw
Wartezeit <- raw %>% rename(wt = `global_mean_waiting_time (mins)`)
Wartezeit$task_id <- factor(Wartezeit$task_id) %>%
fct_reorder(Wartezeit$wt)
# wartezeit plots ----
ggplot(Wartezeit, aes(task_id, wt, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das\nnächste FFZ") +
theme_minimal() +
ylab("gefahrene relative Leerdistanz")
# wartezeit plots ----
ggplot(Wartezeit, aes(task_id, wt, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das\nnächste FFZ") +
theme_minimal() +
ylab("mittlere Wartezeit der Chargen")
ggplot(Wartezeit, aes(task_id, wt, fill=b)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das FFZ mit\nden wenigsten Aufträgen") +
theme_minimal() +
ylab("mittlere Wartezeit der Chargen")
ggplot(Wartezeit, aes(task_id, wt, fill=d)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das\nschnellste FFZ") +
theme_minimal() +
ylab("mittlere Wartezeit der Chargen")
# wartezeit plots ----
ggplot(Wartezeit, aes(task_id, wt, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das\nnächste FFZ") +
theme_minimal() +
ylab("mittlere Wartezeit der Chargen")
# wartezeit plots ----
ggplot(Wartezeit, aes(task_id, wt, fill=a)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das\nnächste FFZ") +
theme_minimal() +
ylab("mittlere Wartezeit der Chargen")
ggplot(Wartezeit, aes(task_id, wt, fill=b)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das FFZ mit\nden wenigsten Aufträgen") +
theme_minimal() +
ylab("mittlere Wartezeit der Chargen")
ggplot(Wartezeit, aes(task_id, wt, fill=d)) +
geom_col() +
scale_fill_continuous(name = "Präferiere das\nschnellste FFZ") +
theme_minimal() +
ylab("mittlere Wartezeit der Chargen")
View(Wartezeit)
